package com.yuen.domain;
// Generated Jan 30, 2018 7:35:01 PM by Hibernate Tools 5.0.6.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * CourseOutcome generated by hbm2java
 */
@Entity
@Table(name = "course_outcome", catalog = "test")
public class CourseOutcome implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer coId;
	private CourseOutcomeVersion courseOutcomeVersion;
	private String coCode;
	private String coDescVn;
	private String coDescEn;
	private Set<CoSoMap> coSoMaps = new HashSet<CoSoMap>(0);
	private Set<CoSoMap> coSoMaps_1 = new HashSet<CoSoMap>(0);
	private Set<ContentOutcomeMap> contentOutcomeMaps = new HashSet<ContentOutcomeMap>(0);
	private Set<QuestionCourseoutcomeMap> questionCourseoutcomeMaps = new HashSet<QuestionCourseoutcomeMap>(0);
	private Set<ContentOutcomeMap> contentOutcomeMaps_1 = new HashSet<ContentOutcomeMap>(0);
	private Set<QuestionCourseoutcomeMap> questionCourseoutcomeMaps_1 = new HashSet<QuestionCourseoutcomeMap>(0);

	public CourseOutcome() {
	}

	public CourseOutcome(String coCode, String coDescVn) {
		this.coCode = coCode;
		this.coDescVn = coDescVn;
	}

	public CourseOutcome(CourseOutcomeVersion courseOutcomeVersion, String coCode, String coDescVn, String coDescEn,
			Set<CoSoMap> coSoMaps, Set<CoSoMap> coSoMaps_1, Set<ContentOutcomeMap> contentOutcomeMaps,
			Set<QuestionCourseoutcomeMap> questionCourseoutcomeMaps, Set<ContentOutcomeMap> contentOutcomeMaps_1,
			Set<QuestionCourseoutcomeMap> questionCourseoutcomeMaps_1) {
		this.courseOutcomeVersion = courseOutcomeVersion;
		this.coCode = coCode;
		this.coDescVn = coDescVn;
		this.coDescEn = coDescEn;
		this.coSoMaps = coSoMaps;
		this.coSoMaps_1 = coSoMaps_1;
		this.contentOutcomeMaps = contentOutcomeMaps;
		this.questionCourseoutcomeMaps = questionCourseoutcomeMaps;
		this.contentOutcomeMaps_1 = contentOutcomeMaps_1;
		this.questionCourseoutcomeMaps_1 = questionCourseoutcomeMaps_1;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "co_id", unique = true, nullable = false)
	public Integer getCoId() {
		return this.coId;
	}

	public void setCoId(Integer coId) {
		this.coId = coId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "course_outcome_version_id")
	public CourseOutcomeVersion getCourseOutcomeVersion() {
		return this.courseOutcomeVersion;
	}

	public void setCourseOutcomeVersion(CourseOutcomeVersion courseOutcomeVersion) {
		this.courseOutcomeVersion = courseOutcomeVersion;
	}

	@Column(name = "co_code", nullable = false, length = 5)
	public String getCoCode() {
		return this.coCode;
	}

	public void setCoCode(String coCode) {
		this.coCode = coCode;
	}

	@Column(name = "co_desc_vn", nullable = false, length = 65535)
	public String getCoDescVn() {
		return this.coDescVn;
	}

	public void setCoDescVn(String coDescVn) {
		this.coDescVn = coDescVn;
	}

	@Column(name = "co_desc_en", length = 65535)
	public String getCoDescEn() {
		return this.coDescEn;
	}

	public void setCoDescEn(String coDescEn) {
		this.coDescEn = coDescEn;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "courseOutcome")
	public Set<CoSoMap> getCoSoMaps() {
		return this.coSoMaps;
	}

	public void setCoSoMaps(Set<CoSoMap> coSoMaps) {
		this.coSoMaps = coSoMaps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "courseOutcome")
	public Set<CoSoMap> getCoSoMaps_1() {
		return this.coSoMaps_1;
	}

	public void setCoSoMaps_1(Set<CoSoMap> coSoMaps_1) {
		this.coSoMaps_1 = coSoMaps_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "courseOutcome")
	public Set<ContentOutcomeMap> getContentOutcomeMaps() {
		return this.contentOutcomeMaps;
	}

	public void setContentOutcomeMaps(Set<ContentOutcomeMap> contentOutcomeMaps) {
		this.contentOutcomeMaps = contentOutcomeMaps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "courseOutcome")
	public Set<QuestionCourseoutcomeMap> getQuestionCourseoutcomeMaps() {
		return this.questionCourseoutcomeMaps;
	}

	public void setQuestionCourseoutcomeMaps(Set<QuestionCourseoutcomeMap> questionCourseoutcomeMaps) {
		this.questionCourseoutcomeMaps = questionCourseoutcomeMaps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "courseOutcome")
	public Set<ContentOutcomeMap> getContentOutcomeMaps_1() {
		return this.contentOutcomeMaps_1;
	}

	public void setContentOutcomeMaps_1(Set<ContentOutcomeMap> contentOutcomeMaps_1) {
		this.contentOutcomeMaps_1 = contentOutcomeMaps_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "courseOutcome")
	public Set<QuestionCourseoutcomeMap> getQuestionCourseoutcomeMaps_1() {
		return this.questionCourseoutcomeMaps_1;
	}

	public void setQuestionCourseoutcomeMaps_1(Set<QuestionCourseoutcomeMap> questionCourseoutcomeMaps_1) {
		this.questionCourseoutcomeMaps_1 = questionCourseoutcomeMaps_1;
	}

}
